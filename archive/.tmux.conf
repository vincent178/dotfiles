# Use C-a instead of C-b
set-option -g default-command "reattach-to-user-namespace -l zsh"
unbind C-b
set -g prefix 'C-\'
set -g mouse on

# I especially like being able to search with /,? when in copy-mode
setw -g mode-keys vi 

# Setup 'v' to begin selection as in Vim and save to System clipboard
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

# new window with same directory of current
bind c new-window -c "#{pane_current_path}"

# split window like vim
# vim's defination of a horizontal/vertical split is revised from tumx's
bind s split-window -h -c "#{pane_current_path}"
bind v split-window -v -c "#{pane_current_path}" -p 40

# Similar to 'C-w j' to navigate windows in Vim
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R


# resize panes like vim
# feel free to change the "1" to however many lines you want to resize by,
# only one at a time can be slow
bind < resize-pane -L 5
bind > resize-pane -R 5
bind - resize-pane -D 5
bind + resize-pane -U 5

# bind : to command-prompt like vim
# this is the default in tmux already
bind : command-prompt

# smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"
